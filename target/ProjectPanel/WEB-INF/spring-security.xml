<beans:beans
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin" access="hasRole('ROLE_GENERAL')" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_GENERAL')" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/admin" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout" />
		<csrf/>
	</http>

	<!--
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="yas" password="1234" authorities="ROLE_GENERAL,ROLE_PREMIUM" />
				<user name="george" password="1234" authorities="ROLE_GENERAL" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	-->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select user_name as username, password, enabled from app_user where user_name = ?"
		  authorities-by-username-query=
		    "select u.user_name as username, r.role from app_user_role r join app_user u on r.user_id = u.user_id where u.user_name = ?" />
	  </authentication-provider>
	</authentication-manager>

</beans:beans>
